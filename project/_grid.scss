@use"sass:math";

$grid-col:12;
$grid-gap:(
    "0":0,
    "1":10px,
    "2":20px,
    "3":30px,
);
$grid-layout:flex-strat,flex-end,
center,space-btween,space-end;


.container{
    width:100%;
    max-width:1020px;
    box-sizing: border-box;
    padding:0 20px;
    margin:0 auto;
}
.row{
    display:flex;
    flex-flow:row wrap;
}
@each $k,$val in $grid-gap {
.grid-gap-#{$k} > * {
    padding:$val;
}
.grid-gap-#{$k}  {
   margin : {
    left:-$val;
    right:-$val;
   };
}
}


@each $v in $grid-layout {
    .justify-#{$v}{
        justify-content: $v;
    }
}

@include xs{
    @for $i from 1 through $grid-col {
        .col-xs-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width:math.div($i * 100%,$grid-col);
        }
    }
}
@include xs{
    @for $i from 1 through $grid-col {
        .col-xs-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width:math.div($i * 100%,$grid-col);
        }
    }
}
@include sm{
    @for $i from 1 through $grid-col {
        .col-sm-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width:math.div($i * 100%,$grid-col);
        }
    }
}
@include md{
    @for $i from 1 through $grid-col {
        .col-md-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width:math.div($i * 100%,$grid-col);
        }
    }
}
@include lg{
    @for $i from 1 through $grid-col {
        .col-lg-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width:math.div($i * 100%,$grid-col);
        }
    }
}
@include xl{
    @for $i from 1 through $grid-col {
        .col-xl-#{$i}{
            box-sizing: border-box;
            flex-grow: 0;
            width:math.div($i * 100%,$grid-col);
        }
    }
}


